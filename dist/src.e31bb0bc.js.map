{"version":3,"sources":["sketch.js","index.js"],"names":["scale","width","height","p5","label","video","osc","preveyePos","prevPoses","setSketch","sketch","setup","createCanvas","background","select","createCapture","VIDEO","size","poseNet","ml5","hide","on","drawPoses","createDiv","position","style","draw","poses","translate","numPoses","length","tint","image","readSpeed","console","log","forEach","pose","index","undefined","keypoints","keypoint","index2","prevKeypoint","dif","x","dir","drawKeypoints","fill","color","Math","abs","r","score","noStroke","ellipse","y","keypoint2","stroke","line","drawEyes","eyes","distance","a","atan2","eye","push","rotate","pop","drawKeypointsOld","part","drawSkeleton","skeleton","p1","p2","playAudio","leftWrist","rightWrist","avgHeight","scaled","freq","module","hot","accept","window","location","reload","s2","p5s"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["// import \"p5/lib/addons/p5.dom\";\r\n\r\nconst scale = 1;\r\nconst width = 640 * scale;\r\nconst height = 480 * scale;\r\n\r\n// setSketch sets this\r\nlet p5;\r\n\r\n//logging data\r\nlet label;\r\n\r\n// setup initializes this\r\nlet video;\r\nlet osc;\r\n\r\n//Pose vars\r\nlet preveyePos;\r\nlet prevPoses = [];\r\n\r\nexport function setSketch(sketch) {\r\n  p5 = sketch;\r\n}\r\n\r\nexport function setup() {\r\n  p5.createCanvas(width, height);\r\n  p5.background(0);\r\n  video = p5.select('video') || p5.createCapture(p5.VIDEO);\r\n  video.size(width, height);\r\n\r\n  // Create a new poseNet method with a single detection\r\n  const poseNet = ml5.poseNet(video, () => p5.select('#status').hide());\r\n\r\n  // Every time we get a new pose, draw it\r\n  poseNet.on('pose', drawPoses);\r\n  \r\n  // Hide the video element, and just show the canvas\r\n  video.hide();\r\n\r\n  //field for pose values\r\n  label = p5.createDiv();\r\n  label.position(5, height + 50);\r\n  label.style('font-size', '12pt');\r\n\r\n}\r\n\r\nexport function draw() {\r\n}\r\n\r\nfunction drawPoses(poses) {\r\n  p5.translate(width, 0); // move to far corner\r\n  p5.scale(-1.0, 1.0);\r\n\r\n  // Uses poses number to alter background\r\n  let numPoses = poses.length;\r\n  p5.tint(255, 255/numPoses);\r\n  p5.image(video, 0, 0, video.width, video.height);\r\n  \r\n  //p5.fill(0,10);\r\n  //p5.rect(0,0,width,height);\r\n\r\n  readSpeed(poses);\r\n\r\n  //drawKeypoints(poses);\r\n  //drawSkeleton(poses);\r\n  //playAudio(poses);\r\n}\r\n\r\n//want to eventually detect speed, direction, and distance from camera\r\n//(distance between eyes/shoulders/hips..etc)\r\n\r\n//Right now I'm only use Xpos of Left eye on ONE pose to evealuate spped (testing purposes)\r\n//will need to flush out system to work for multiple joints AND multiple poses(arrays baybey)\r\n\r\n//Function to read and compare speeds of pose keypoints\r\nfunction readSpeed(poses){\r\n  //Debugging to read no. of poses\r\n  console.log(poses.length);\r\n\r\n   if(poses.length == 0){ //return if no poses\r\n    return;\r\n  }\r\n\r\n  //(Org testing)get vars from pose[0]\r\n  //const pose = poses[0];\r\n\r\n  //Added poses.foreach loop in order to use multipose detection\r\n  poses.forEach(function(pose, index){\r\n    if(prevPoses[index] == undefined){\r\n      prevPoses[index] = pose;\r\n      //continue;\r\n    }\r\n\r\n    pose.pose.keypoints.forEach(function (keypoint, index2){\r\n      let prevKeypoint = prevPoses[index].pose.keypoints[index2];\r\n      //Calc difference (distance moved)    \r\n      let dif = prevKeypoint.position.x - keypoint.position.x;\r\n      let dir; //I'm going to remember how to use vectors(?) and trig to find the direction of movement\r\n      keypoint.dif = dif; //append this value to Pose\r\n      //by appening dif will be pased onto the DrawKeypoints to be easily read with a for loop\r\n    });\r\n    prevPoses[index] = pose; //set current pose to previous\r\n\r\n    // Call Draw Keypoints\r\n    drawKeypoints(pose); //would like to replace function with \"update Keypoints\"\r\n  });\r\n\r\n\r\n\r\n  /* /////////////Old Testing code with just leftEye position////////////\r\n  const eye = pose[1];\r\n  const eyePos = eye.position;\r\n  label.html('LeftEye: ' + JSON.stringify(eyePos));\r\n  if(preveyePos == undefined){ //return if no prev ref\r\n   preveyePos = eyePos;\r\n   return;\r\n  }\r\n  //calculate difference (distance moved)\r\n  let eyedif = Math.abs(preveyePos.x - eyePos.x);\r\n  preveyePos = eyePos;\r\n  */\r\n  ////////////////////////////////////////////////////////////////////////\r\n}\r\n\r\nfunction drawKeypoints(pose) {\r\n  //Pose drawing/graphic function\r\n\r\n  pose.pose.keypoints.forEach(function (keypoint,index){\r\n      //Create vars for radius and color from dif values\r\n      let dif = keypoint.dif;\r\n      let fill = p5.color(5.0*Math.abs(dif),0,10.0*Math.abs(dif)); //Speed determine fill color\r\n      let r = 5.0 + (dif*1.3); //Size -> Speed direct relationship\r\n\r\n      if (keypoint.score > 0.5) {\r\n        p5.fill(fill);\r\n        p5.noStroke();\r\n        p5.ellipse(keypoint.position.x, keypoint.position.y, r, r);\r\n\r\n        pose.pose.keypoints.forEach((keypoint2) => {\r\n        p5.stroke(0,0,Math.abs(dif)*10.0);\r\n        p5.line(keypoint.position.x, keypoint.position.y,keypoint2.position.x,keypoint2.position.y);\r\n       })\r\n      }\r\n  });\r\n  // Special Draw Eyes function over top other graphics\r\n  drawEyes(pose);\r\n  // pose.pose.keypoints.forEach((keypoint) => {\r\n    \r\n  // })\r\n\r\n  \r\n\r\n  /////////////// Old Skeleton Drawing /////////////\r\n  // pose.skeleton.forEach((skeleton) => {\r\n  //       const [p1, p2] = skeleton;\r\n  //       p5.stroke(255, 0, 0);\r\n  //       p5.line(p1.position.x, p1.position.y, p2.position.x, p2.position.y);\r\n  //       // p5.quad(p1.position.x,p1.position.y,p2.position.x,p2.position.y,p2.position.x,p2.position.y+10,p1.position.x,p1.position.y+10);\r\n  // });\r\n}\r\n\r\n\r\nfunction drawEyes(pose){\r\n  // Create array for both eyes\r\n  // Check for eyes (error)\r\n  if(!pose.pose.keypoints[1].position && !pose.pose.keypoints[2].position){\r\n    return;\r\n  }\r\n  let eyes = [pose.pose.keypoints[1].position, pose.pose.keypoints[2].position];\r\n  let distance = Math.abs(eyes[0].x - eyes[1].x); //calc distance to determine size\r\n  let r = distance/2;\r\n  let a = Math.atan2(eyes[0].y - eyes[1].y, eyes[0].x - eyes[1].x); //calc rotation angle for head turning\r\n\r\n  //Draw eyes w/ push & pop\r\n  eyes.forEach((eye) => {\r\n    p5.push();\r\n    p5.translate(eye.x, eye.y);\r\n    p5.rotate(a);\r\n    p5.fill(255);\r\n    p5.ellipse(0,0, r, r/2);\r\n    p5.fill(0);\r\n    p5.ellipse(0,0, r/4, r/4);\r\n    p5.pop();\r\n  });\r\n}\r\n\r\n\r\n\r\n/////////////////////////////OLD CODES/////////////////////////////////////////\r\n// Draw ellipses over the detected keypoints\r\nfunction drawKeypointsOld(poses) {\r\n  poses.forEach((pose) =>\r\n    pose.pose.keypoints.forEach((keypoint) => {\r\n      if (keypoint.score > 0.5) {\r\n        p5.fill(255);\r\n\r\n        //If difference(speed if aboce a threshold, draw as RED)\r\n        if(keypoint.dif > 15.0){\r\n          p5.fill(255,0,0);\r\n        }\r\n        p5.noStroke();\r\n        p5.ellipse(keypoint.position.x, keypoint.position.y, 5, 5);\r\n        //Not my favorite way of doing this, but having trouble with\r\n        if(keypoint.part == 'rightEye' || keypoint.part == 'leftEye'){\r\n          p5.fill(255);\r\n          p5.ellipse(keypoint.position.x,keypoint.position.y, 20,10);\r\n          p5.fill(0);\r\n          p5.ellipse(keypoint.position.x,keypoint.position.y, 5,5);\r\n        }\r\n      }\r\n    })\r\n\r\n  )\r\n}\r\n\r\n//Other interests: rendering different kinds of bodies / forms (blobs/shapes other than skeleton)\r\n\r\nfunction drawSkeleton(poses) {\r\n    poses.forEach((pose) => {\r\n      pose.skeleton.forEach((skeleton) => {\r\n        const [p1, p2] = skeleton;\r\n        p5.stroke(255, 0, 0);\r\n        p5.line(p1.position.x, p1.position.y, p2.position.x, p2.position.y);\r\n        //p5.quad(p1.position.x,p1.position.y,p2.position.x,p2.position.y,p2.position.x,p2.position.y+10,p1.position.x,p1.position.y+10);\r\n      });\r\n    });\r\n}\r\n\r\n// Audio from in-class demos\r\nfunction playAudio(poses){\r\n  if(poses.length == 0){\r\n    return;\r\n  }\r\n  if(!osc){\r\n    return;\r\n  }\r\n  const pose = poses[0].pose;\r\n  const keypoints = pose.keypoints;\r\n\r\n  //calculate distance between hands(wrists)\r\n  const leftWrist = keypoints[9].position;\r\n  const rightWrist = keypoints[10].position;\r\n\r\n  const distance = Math.abs(rightWrist.x - leftWrist.x);\r\n  const avgHeight = (leftWrist.y + rightWrist.y)/2;\r\n  const scaled = distance / width;\r\n\r\n  //console.info(distance);\r\n  osc.freq(440 * scaled);\r\n}","// import p5 from 'p5';\r\nimport * as sketch from './sketch';\r\n\r\n// Force page refresh on hot reload\r\nif (module.hot) {\r\n    module.hot.accept(() => window.location.reload());\r\n}\r\n\r\nconst s2 = (p5s) => {\r\n  sketch.setSketch(p5s);\r\n  p5s.setup = () => sketch.setup(sketch);\r\n  p5s.draw = () => sketch.draw(sketch);\r\n}\r\n\r\nnew p5(s2, 'container');\r\n"]}