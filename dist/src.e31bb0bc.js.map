{"version":3,"sources":["sketch.js","index.js"],"names":["scale","width","height","p5","video","setSketch","sketch","setup","createCanvas","select","createCapture","VIDEO","size","poseNet","ml5","hide","on","drawPoses","draw","poses","translate","fill","rect","drawKeypoints","drawSkeleton","forEach","pose","keypoints","keypoint","score","noStroke","ellipse","position","x","y","skeleton","p1","p2","stroke","line","module","hot","accept","window","location","reload","s2","p5s"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["// import \"p5/lib/addons/p5.dom\";\r\n\r\nconst scale = 1;\r\nconst width = 640 * scale;\r\nconst height = 480 * scale;\r\n\r\n// setSketch sets this\r\nlet p5;\r\n\r\n// setup initializes this\r\nlet video;\r\n\r\nexport function setSketch(sketch) {\r\n  p5 = sketch;\r\n}\r\n\r\nexport function setup() {\r\n  p5.createCanvas(width, height);\r\n  video = p5.select('video') || p5.createCapture(p5.VIDEO);\r\n  video.size(width, height);\r\n\r\n  // Create a new poseNet method with a single detection\r\n  const poseNet = ml5.poseNet(video, () => p5.select('#status').hide());\r\n\r\n  // Every time we get a new pose, draw it\r\n  poseNet.on('pose', drawPoses);\r\n  \r\n  // Hide the video element, and just show the canvas\r\n  video.hide();\r\n}\r\n\r\nexport function draw() {\r\n}\r\n\r\nfunction drawPoses(poses) {\r\n  p5.translate(width, 0); // move to far corner\r\n  p5.scale(-1.0, 1.0);\r\n  //p5.image(video, 0, 0, video.width, video.height);\r\n  p5.fill(255);\r\n  p5.rect(0,0,width,height);\r\n  drawKeypoints(poses);\r\n  drawSkeleton(poses);\r\n}\r\n\r\n// Draw ellipses over the detected keypoints\r\nfunction drawKeypoints(poses) {\r\n  poses.forEach((pose) =>\r\n    pose.pose.keypoints.forEach((keypoint) => {\r\n      if (keypoint.score > 0.2) {\r\n        p5.fill(0, 255, 0);\r\n        p5.noStroke();\r\n        p5.ellipse(keypoint.position.x, keypoint.position.y, 5, 5);\r\n      }\r\n    })\r\n  )\r\n}\r\n\r\nfunction drawSkeleton(poses) {\r\n    poses.forEach((pose) => {\r\n      pose.skeleton.forEach((skeleton) => {\r\n        const [p1, p2] = skeleton;\r\n        p5.stroke(255, 0, 0);\r\n        p5.line(p1.position.x, p1.position.y, p2.position.x, p2.position.y);\r\n      });\r\n    });\r\n}\r\n","// import p5 from 'p5';\r\nimport * as sketch from './sketch';\r\n\r\n// Force page refresh on hot reload\r\nif (module.hot) {\r\n    module.hot.accept(() => window.location.reload());\r\n}\r\n\r\nconst s2 = (p5s) => {\r\n  sketch.setSketch(p5s);\r\n  p5s.setup = () => sketch.setup(sketch);\r\n  p5s.draw = () => sketch.draw(sketch);\r\n}\r\n\r\nnew p5(s2, 'container');\r\n"]}