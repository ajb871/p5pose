{"version":3,"sources":["sketch.js","index.js"],"names":["scale","width","height","p5","label","points","video","setSketch","sketch","setup","createCanvas","select","createCapture","VIDEO","size","poseNet","ml5","hide","on","drawPoses","createDiv","position","style","draw","poses","translate","fill","rect","length","pose","html","JSON","stringify","keypoints","drawKeypoints","drawSkeleton","forEach","keypoint","score","noStroke","ellipse","x","y","part","skeleton","p1","p2","stroke","line","quad","module","hot","accept","window","location","reload","s2","p5s"],"mappings":"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","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["// import \"p5/lib/addons/p5.dom\";\r\n\r\nconst scale = 1;\r\nconst width = 640 * scale;\r\nconst height = 480 * scale;\r\n\r\n// setSketch sets this\r\nlet p5;\r\n\r\n//logging data\r\nlet label;\r\n\r\n//analyzing speed\r\nlet points;\r\n\r\n// setup initializes this\r\nlet video;\r\n\r\nexport function setSketch(sketch) {\r\n  p5 = sketch;\r\n}\r\n\r\nexport function setup() {\r\n  p5.createCanvas(width, height);\r\n  video = p5.select('video') || p5.createCapture(p5.VIDEO);\r\n  video.size(width, height);\r\n\r\n  // Create a new poseNet method with a single detection\r\n  const poseNet = ml5.poseNet(video, () => p5.select('#status').hide());\r\n\r\n  // Every time we get a new pose, draw it\r\n  poseNet.on('pose', drawPoses);\r\n  \r\n  // Hide the video element, and just show the canvas\r\n  video.hide();\r\n\r\n  //field for pose values\r\n  label = p5.createDiv();\r\n  label.position(5, height + 50);\r\n  label.style('font-size', '12pt');\r\n}\r\n\r\nexport function draw() {\r\n}\r\n\r\nfunction drawPoses(poses) {\r\n  p5.translate(width, 0); // move to far corner\r\n  p5.scale(-1.0, 1.0);\r\n  //p5.image(video, 0, 0, video.width, video.height);\r\n  \r\n  p5.fill(0,100);\r\n  p5.rect(0,0,width,height);\r\n\r\n  if(poses.length > 0){\r\n    const pose = poses[0].pose;\r\n    //console.log('Score =', pose.score);\r\n    label.html('Score = ' + JSON.stringify(pose.keypoints));\r\n  }\r\n  \r\n  drawKeypoints(poses);\r\n  drawSkeleton(poses);\r\n}\r\n\r\n// Draw ellipses over the detected keypoints\r\nfunction drawKeypoints(poses) {\r\n  poses.forEach((pose) =>\r\n    pose.pose.keypoints.forEach((keypoint) => {\r\n      if (keypoint.score > 0.5) {\r\n        p5.fill(180, 0, 190);\r\n        p5.noStroke();\r\n        p5.ellipse(keypoint.position.x, keypoint.position.y, 5, 5);\r\n        //Not my favorite way of doing this, but having trouble with\r\n        if(keypoint.part == 'nose'){\r\n          p5.fill(255,0,0);\r\n          p5.ellipse(keypoint.position.x,keypoint.position.y, 40,40);\r\n        }\r\n        if(keypoint.part == 'rightEye' || keypoint.part == 'leftEye'){\r\n          p5.fill(255);\r\n          p5.ellipse(keypoint.position.x,keypoint.position.y, 20,10);\r\n          p5.fill(0);\r\n          p5.ellipse(keypoint.position.x,keypoint.position.y, 5,5);\r\n        }\r\n      }\r\n    })\r\n\r\n  )\r\n}\r\n\r\nfunction drawSkeleton(poses) {\r\n    poses.forEach((pose) => {\r\n      pose.skeleton.forEach((skeleton) => {\r\n        const [p1, p2] = skeleton;\r\n        p5.stroke(255, 0, 0);\r\n        p5.line(p1.position.x, p1.position.y, p2.position.x, p2.position.y);\r\n        p5.quad(p1.position.x,p1.position.y,p2.position.x,p2.position.y,p1.position.x,p1.position.y+70,p2.position.x,p2.position.y+70);\r\n      });\r\n    });\r\n}\r\n","// import p5 from 'p5';\r\nimport * as sketch from './sketch';\r\n\r\n// Force page refresh on hot reload\r\nif (module.hot) {\r\n    module.hot.accept(() => window.location.reload());\r\n}\r\n\r\nconst s2 = (p5s) => {\r\n  sketch.setSketch(p5s);\r\n  p5s.setup = () => sketch.setup(sketch);\r\n  p5s.draw = () => sketch.draw(sketch);\r\n}\r\n\r\nnew p5(s2, 'container');\r\n"]}